<?php /* crée une nouvelle page ctr + mod + vue */class NewPage{	public static function unique($namePage, $src)	{		$cible = $src.'/'.$namePage;		if(is_readable($cible))			Error::code(7);		$handle = fopen($cible, 'x');		@fclose($handle);		return $cible;	}	public static function uniqueTyped($namePage, $src, $type)	{		switch($type){			case 'js':				$namePage .= '.js';			break;			case 'cfg':				$namePage = 'cfg.'.$namePage.'.php';			break;			case 'css':				$namePage .= '.css';			break;			case 'htc':				$namePage = '.'.$namePage;			break;			case 'nfo':				$namePage = 'info.'.$namePage.'.php';			break;			case 'atl':				$namePage = 'class.'.$namePage.'.php';			break;		}		return NewPage::unique($namePage, $src);	}	public static function mvc($namePage, $mvc, $admin = false)	{		if(empty($mvc))			Error::brut('Mvc empty.');		if(is_readable($mvc.'/controleur/ctr.'.$namePage.'.php'))			Error::brut('Write forbidden from '.$mvc.'/controleur/ctr.'.$namePage.'.php');		$erreur = 0;		function ouverture($handle, $erreur, $namePage){			if(empty($handle))				$erreur ++;			else				fwrite($handle, '<?php /* '.$namePage.' */ ?>');			@fclose($handle);			return $erreur; 		}		if(empty($admin))		{			$handle = fopen($mvc.'/controleur/ctr.'.$namePage.'.php', 'x');			$erreur = ouverture($handle, $erreur, $namePage);			$handle = fopen($mvc.'/model/mod.'.$namePage.'.php', 'x');			$erreur = ouverture($handle, $erreur, $namePage);			$handle = fopen($mvc.'/vue/vue.'.$namePage.'.php', 'x');			$erreur = ouverture($handle, $erreur, $namePage);		}		else		{			$handle = fopen('mvc/controleur/ctrA.'.$namePage.'.php', 'x');			$erreur = ouverture($handle, $erreur, $namePage);			$handle = fopen('mvc/model/modA.'.$namePage.'.php', 'x');			$erreur = ouverture($handle, $erreur, $namePage);			$handle = fopen('mvc/vue/vueA.'.$namePage.'.php', 'x');			$erreur = ouverture($handle, $erreur, $namePage);		}		return $erreur;	}	public static function error($numError, $message)	{		$numError = (int) $numError;		$erreur = 0;		$srcMsg = config::srcPackage().'/error/messages/'.$numError.'.php';		if(is_readable($srcMsg))			Error::code(7);		$handle = fopen($srcMsg, 'x');		if(empty($handle))			$erreur ++;		else			fwrite($handle, $message);		@fclose($handle);		return $erreur; 	}} ?>